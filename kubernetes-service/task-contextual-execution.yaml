apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: iks-contextual-execution
spec:
  params:
    # As Cluster Pipeline Resources are not properly updated after kubernetes cluster setup
    # Allow user to specify kubeconfig copy fallback directory provided by fetch-iks-cluster-context task
    - name: cluster-pipeline-resources-directory
      description: directory in which the kubeconfig file(s) for clusterPipelineResources are available
      default: /clusters
    - name: cluster-name
      description: name of the cluster - required if no cluster pipeline resource provided to this task
      default: ""
    - name: script
      description: the bash snippet to execute within the context of the kubernetes configuration
      default: 'kubectl version'
  resources:
    inputs:
      - name: cluster
        type: cluster
        optional: true        
  workspaces:
    - name: workspace
      description: A workspace backing by a volume
  steps:
    - name: execute
      image: ibmcom/pipeline-base-image:2.6
      workingDir: $(workspaces.workspace.path)
      env:
        # CD execution context injection
        - name: PIPELINE_RUN_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tekton.dev/pipelineRun']
        - name: PIPELINE_RUN_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/tekton-pipeline']
        - name: BUILD_NUMBER
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/build-number']
        - name: PIPELINE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/pipeline-id']
        - name: TRIGGER_TYPE
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/trigger-type']
        - name: TRIGGER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/trigger-name']
        - name: TRIGGERED_BY
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/triggered-by']          
      command: ["/bin/bash", "-c"]
      args:
        - |

          # Find cluster information
          if [ "$(resources.inputs.cluster.name)" == "" ]; then
            export CLUSTER_NAME="$(params.cluster-name)"
          else
            export CLUSTER_NAME="$(resources.inputs.cluster.name)"
          fi
          export KUBECONFIG=$(workspaces.workspace.path)/$(params.cluster-pipeline-resources-directory)/$CLUSTER_NAME/kubeconfig

          # Validate KUBECONFIG
          if test -f "$KUBECONFIG"; then
            echo "KUBECONFIG=$KUBECONFIG"
          else
            echo "$KUBECONFIG file is not existing. Exiting now..."
            exit 1
          fi
          # User-defined snippet/script
          $(params.script)
      volumeMounts:
        - mountPath: /cd-config
          name: cd-config-volume
  volumes:
    - name: cd-config-volume
      configMap:
        name: toolchain
        items:
        - key: toolchain.json
          path: toolchain.json
