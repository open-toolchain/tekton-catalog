apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: kubernetes-contextual-execution
spec:
  inputs:
    params:
      - name: task-pvc
        description: the task pvc - this is the volume valid for the lifetime of the pipelinerun
      - name: task-pvc-mountpath
        default: /artifacts
      # As Cluster Pipeline Resources are not properly updated after kubernetes cluster setup
      # Allow user to specify kubeconfig copy fallback directory provided by fetch-iks-cluster-context task
      - name: clusterPipelineResourcesDirectory
        description: directory in which the kubeconfig file(s) for clusterPipelineResources are available
        default: /workspace
      - name: cluster-name
        description: name of the cluster - required if no cluster pipeline resource provided to this task
        default: ""
      - name: script
        description: the bash snippet to execute within the context of the kubernetes configuration
        default: 'kubectl version'
    resources:
      - name: cluster
        type: cluster
        optional: true
  steps:
    - name: execute
      image: ibmcom/pipeline-base-image:2.6
      workingDir: $(inputs.params.task-pvc-mountpath)
      env:
        # CD execution context injection
        - name: PIPELINE_RUN_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tekton.dev/pipelineRun']
        - name: PIPELINE_RUN_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/tekton-pipeline']
        - name: BUILD_NUMBER
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/build-number']
        - name: PIPELINE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/pipeline-id']
        - name: TRIGGER_TYPE
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/trigger-type']
        - name: TRIGGER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/trigger-name']
        - name: TRIGGERED_BY
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/triggered-by']
      command: ["/bin/bash", "-c"]
      args:
        - |

          # Find cluster information
          if [ "$(inputs.resources.cluster.name)" == "" ]; then
            export CLUSTER_NAME="$(inputs.params.cluster-name)"
          else
            export CLUSTER_NAME="$(inputs.resources.cluster.name)"
          fi
          export KUBECONFIG=$(inputs.params.clusterPipelineResourcesDirectory)/$CLUSTER_NAME/kubeconfig

          # Validate KUBECONFIG
          if test -f "$KUBECONFIG"; then
            echo "KUBECONFIG=$KUBECONFIG"
          else
            echo "$KUBECONFIG file is not existing. Exiting now..."
            exit 1
          fi
          # User-defined snippet/script
          $(inputs.params.script)
      volumeMounts:
        - mountPath: $(inputs.params.task-pvc-mountpath)
          name: task-volume
        - mountPath: /cd-config
          name: cd-config-volume
  volumes:
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.task-pvc)
    - name: cd-config-volume
      configMap:
        name: toolchain
        items:
        - key: toolchain.json
          path: toolchain.json
