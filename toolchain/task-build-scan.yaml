---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: toolchain-build-scan
spec:
  params:
    - name: repository
      description: the git repo
    - name: pipeline-debug
      description: Pipeline debug mode
      default: "1"
  results:
    - name: build_needed
      description: Determines if additional build is required
  steps:
    - name: scan-repo
      image: ibmcom/pipeline-base-image:2.6
      env:
        - name: PIPELINE_DEBUG
          value: $(params.pipeline-debug)
        - name: GIT_REPO
          value: $(params.repository)
      script: |
        #!/bin/bash
        set -e -o pipefail;

        if [ $PIPELINE_DEBUG == 1 ]; then
          pwd
          env
          trap env EXIT
          set -x
        fi

        #Scan the repo for a 'pom.xml' file
        echo "The Git repo is: $GIT_REPO"
        echo "The current workind directory is:"
        pwd
        if [[ -n $(find / -name pom.xml) ]]; then
          echo "Found 'pom.xml' file"
          echo "Setting 'build_needed' to 'true'"
          echo -n "true" > $(results.build_needed.path)
        else
          echo "No 'pom.xml' file found"
          echo "Setting 'build_needed' to 'false'"
          echo -n "false" > $(results.build_needed.path)
        fi
    - name: build-check
      image: ibmcom/pipeline-base-image:2.6
      env:
        - name: PIPELINE_DEBUG
          value: $(params.pipeline-debug)
      script: |
        #!/bin/bash
        set -e -o pipefail;

        if [ $PIPELINE_DEBUG == 1 ]; then
          pwd
          env
          trap env EXIT
          set -x
        fi

        #Scan the repo for a 'pom.xml' file
        echo "build_needed set to: $(results.build_needed.path)"
        if [ "$(results.build_needed.path)" == "true" ]; then
          echo "Found 'pom.xml' file"
          mvn -B package
        else
          echo "No additional build required"
        fi
