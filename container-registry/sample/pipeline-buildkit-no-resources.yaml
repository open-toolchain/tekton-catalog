apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: buildkit-no-resources
spec:
  params:
    - name: pipeline-pvc
      description: the pipeline pvc name
    - name: repository
      description: the git repo
    - name: branch
      description: the branch for the git repo
    - name: image-url
      description: the url of the image to build
    - name: pathToDockerfile
      default: '.'
    - name: pipeline-debug
      default: "0"
  tasks:
    - name: pipeline-1-clone-task
      taskRef:
        name: clone-repo-task
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: repository
          value: $(params.repository)
        - name: branch
          value: $(params.branch)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
    - name: pipeline-2-containerize-task
      runAfter: [pipeline-1-clone-task]
      taskRef:
        name: containerize-task
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: pathToContext
          value: $(params.pathToDockerfile)
        - name: pathToDockerfile
          value: $(params.pathToDockerfile)
        - name: additionalTags
          value: 'latest'
        - name: additionalTagsScript
          value: |
            # Include the clone task output variables in the environment
            source /artifacts/build.properties
            # The script is providing tag(s) as output
            # But logs can be written as error stderr
            echo "Providing an image tag including git branch and commit" >&2
            # Add a specific tag with branch and commit
            echo "1.0.0-${GIT_BRANCH}-${GIT_COMMIT}"
            # Add a specific tag with cd build number
            echo "1.0.0-${BUILD_NUMBER}"
        - name: image-url
          value: $(params.image-url)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
    - name: pipeline-3-va-task
      runAfter: [pipeline-2-containerize-task]
      taskRef:
        name: vulnerability-advisor-task
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: scanReportFile
          value: 'app-image-va-report.json'
        # - name: maxIteration
        #   value: '5'
        # - name: sleepTime
        #   value: '3'
        # - name: failOnScannedIssues
        #   value: 'false'
        - name: image-url
          value: $(params.image-url)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
