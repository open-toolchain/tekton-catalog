---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: cr-build-no-image-url
spec:
  params:
    - name: repository
      description: the git repo
    - name: branch
      description: the branch for the git repo
    - name: registry-region
      description: the container registry region
    - name: registry-namespace
      description: the container registry namespace
    - name: image-name
      description: the image name
    - name: path-to-dockerfile
      default: "."
    - name: pipeline-debug
      default: "0"
  workspaces:
    - name: pipeline-ws
  tasks:
    - name: pipeline-1-clone-task
      taskRef:
        name: git-clone-repo
      params:
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: ibmcloud-apikey-secret-key
          value: "apikey"
        - name: repository
          value: $(params.repository)
        - name: branch
          value: $(params.branch)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: properties-file
          value: ""
      workspaces:
        - name: output
          workspace: pipeline-ws
    - name: pipeline-2-cr-build-task
      runAfter: [pipeline-1-clone-task]
      taskRef:
        name: icr-cr-build
      params:
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: container-registry-apikey-secret-key
          value: "apikey"
        - name: path-to-context
          value: $(params.path-to-dockerfile)
        - name: path-to-dockerfile
          value: $(params.path-to-dockerfile)
        - name: registry-region
          value: $(params.registry-region)
        - name: registry-namespace
          value: $(params.registry-namespace)
        - name: image-name
          value: $(params.image-name)
        - name: additional-tags
          value: latest
        - name: additional-tags-script
          value: |
            # The script is providing tag(s) as output
            # But logs can be written as error stderr
            echo "** Here is some Continuous Delivery Tekon Pipeline support configuration properties:" >&2
            ls -l /cd-config >&2
            ls -l /cd-config/environment-properties >&2
            ls -l /cd-config/secure-properties >&2
            echo "Providing an image tag including git branch and commit" >&2
            # Add a specific tag with cd build number
            the_git_branch="$(tasks.pipeline-1-clone-task.results.git-branch)"
            the_git_commit="$(tasks.pipeline-1-clone-task.results.git-commit)"
            echo "1.0.0-${BUILD_NUMBER}-${the_git_branch}-${the_git_commit}"
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: properties-file
          value: ""
      workspaces:
        - name: source
          workspace: pipeline-ws
    - name: pipeline-3-va-task
      runAfter: [pipeline-2-cr-build-task]
      taskRef:
        name: icr-check-va-scan
      params:
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: container-registry-apikey-secret-key
          value: "apikey"
        - name: scan-report-file
          value: "app-image-va-report.json"
        # - name: max-iteration
        #   value: '5'
        # - name: sleep-time
        #   value: '3'
        # - name: fail-on-scanned-issues
        #   value: 'false'
        - name: image-url
          value: $(tasks.pipeline-2-cr-build-task.results.image-repository)
        - name: image-digest
          value: $(tasks.pipeline-2-cr-build-task.results.image-digest)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: artifacts
          workspace: pipeline-ws
