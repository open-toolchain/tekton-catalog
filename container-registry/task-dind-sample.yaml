apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: task-dind-sample
spec:
  inputs:
    params:
      - name: task-pvc
        description: the output pvc
      - name: custom-image
        description: The Docker image to use
        default: docker
      - name: propertiesFile
        description: file containing properties out of containerize task
        default: build.properties
  steps:
    - name: client
      image: $(inputs.params.custom-image)
      env:
        - name: PROPERTIES_FILE
          value: $(inputs.params.propertiesFile)
        # Connect to the sidecar over TCP, with TLS.
        - name: DOCKER_HOST
          value: tcp://localhost:2376
        # Verify TLS.
        - name: DOCKER_TLS_VERIFY
          value: '1'
        # Use the certs generated by the sidecar daemon.
        - name: DOCKER_CERT_PATH
          value: /certs/client
      command: ["/bin/sh", "-c"]
      args:
        - |
          set -e -o pipefail
          echo "$PROPERTIES_FILE content:"
          cat $PROPERTIES_FILE
          # Run a Docker container.
          docker run busybox echo hello
          # Write a Dockerfile and `docker build` it.
          cat > Dockerfile << EOF
          FROM ubuntu
          RUN apt-get update
          ENTRYPOINT ["echo", "hello"]
          EOF
          docker build -t hello . && docker run hello
          docker images
          # ...then run it!
          docker run hello
      volumeMounts:
        - mountPath: /test
          name: task-volume
        - mountPath: /certs/client
          name: dind-certs
  volumes:
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.task-pvc)
    - name: dind-certs
      emptyDir: {}
  sidecars:
    - image: docker:dind
      name: server
      securityContext:
        privileged: true
      env:
        # Write generated certs to the path shared with the client.
        - name: DOCKER_TLS_CERTDIR
          value: /certs
      volumeMounts:
        - mountPath: /certs/client
          name: dind-certs
      # Wait for the dind daemon to generate the certs it will share with the client.
      readinessProbe:
        periodSeconds: 1
        exec:
          command: ["ls", "/certs/client/ca.pem"]
