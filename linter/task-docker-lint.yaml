---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: linter-docker-lint
spec:
  params:
    - name: path-to-dockerfile
      description: the path to the Dockerfile that is used for the build (default to `.` meaning current directory)
      default: .
    - name: dockerfile
      description: The name of the Dockerfile
      default: "Dockerfile"
    - name: path-to-hadolint-config
      description: The path to the hadolint configuration file
      default: ""
    - name: hadolint-ignored-rules
      description: Comma separated list of ignored rules for the lint
      default: ""
    - name: trusted-registries
      description: Comma separated list of trusted repositories that can be used in Dockerfiles
      default: ""
    - name: fail-on-lint-errors
      description: |
        flag (`true` | `false`) to indicate if the task should fail or continue
        if issues are found in the Dockerfile lint
      default: "true"
    - name: pipeline-debug
      description: Pipeline debug mode. Value can be 0 or 1. Default to 0
      default: "0"
  workspaces:
    - name: workspace
      description: A workspace where the Dockerfile is expected to be
      mountPath: /artifacts
  steps:
    - name: check-dockerfile
      image: hadolint/hadolint:v1.18.0-alpine
      workingDir: /artifacts
      env:
        - name: DOCKER_FILE
          value: $(params.dockerfile)
        - name: DOCKER_FILE_PATH
          value: $(params.path-to-dockerfile)
        - name: HADOLINT_CONFIG
          value: $(params.path-to-hadolint-config)
        - name: HADOLINT_IGNORED_RULES
          value: $(params.hadolint-ignored-rules)
        - name: TRUSTED_REGISTRIES
          value: $(params.trusted-registries)
        - name: PIPELINE_DEBUG
          value: $(params.pipeline-debug)
      script: |
        #!/bin/sh
        if [ $PIPELINE_DEBUG == 1 ]; then
          pwd
          env
          hadolint --version
          trap env EXIT
          set -x
        fi

        if [ -f ${DOCKER_FILE_PATH}/${DOCKER_FILE} ]; then
            echo -e "Dockerfile found at: ${DOCKER_FILE_PATH}/${DOCKER_FILE}"
        else
            echo "Dockerfile not found at: ${DOCKER_FILE_PATH}/${DOCKER_FILE}"
            exit 1
        fi

        echo "Linting Dockerfile"

        if [ "$HADOLINT_CONFIG" ]; then
          HADOLINT_CONFIG="--config $HADOLINT_CONFIG"
        fi

        if [ "$HADOLINT_IGNORED_RULES" ]; then
          HADOLINT_IGNORED_RULES=$(echo $HADOLINT_IGNORED_RULES | sed "s/,/ --ignore /g")
          HADOLINT_IGNORED_RULES="--ignore $HADOLINT_IGNORED_RULES"
        fi

        if [ "$TRUSTED_REGISTRIES" ]; then
          TRUSTED_REGISTRIES=$(echo $TRUSTED_REGISTRIES | sed "s/,/ --trusted-registry /g")
          TRUSTED_REGISTRIES="--trusted-registry $TRUSTED_REGISTRIES"
        fi

        if hadolint ${HADOLINT_CONFIG} ${HADOLINT_IGNORED_RULES} ${TRUSTED_REGISTRIES} ${DOCKER_FILE_PATH}/${DOCKER_FILE}; then
          echo "No lint errors found"
        else
          # Failures in the lint
          if [ "$(params.fail-on-lint-errors)" == "true" ]; then
            exit 1;
          fi
        fi
